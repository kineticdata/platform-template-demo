{
  "anonymous": false,
  "attributes": [
    {
      "name": "Background Image",
      "values": [
        "/usarmy49.jpg"
      ]
    },
    {
      "name": "Icon",
      "values": [
        "la-vials"
      ]
    }
  ],
  "bridgedResources": [
    {
      "model": "Users",
      "name": "Find Person by Email",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Query')}",
          "name": "Email"
        }
      ],
      "qualification": "By Email",
      "status": "Active"
    },
    {
      "model": "Users",
      "name": "Person Checkbox Test",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Checkbox Params').join('|')}",
          "name": "Email"
        }
      ],
      "qualification": "By Email",
      "status": "Active"
    }
  ],
  "categorizations": [

  ],
  "customHeadContent": null,
  "description": "",
  "indexDefinitions": [
    {
      "name": "closedBy",
      "parts": [
        "closedBy"
      ],
      "unique": false
    },
    {
      "name": "createdBy",
      "parts": [
        "createdBy"
      ],
      "unique": false
    },
    {
      "name": "handle",
      "parts": [
        "handle"
      ],
      "unique": false
    },
    {
      "name": "submittedBy",
      "parts": [
        "submittedBy"
      ],
      "unique": false
    },
    {
      "name": "updatedBy",
      "parts": [
        "updatedBy"
      ],
      "unique": false
    },
    {
      "name": "values[Checkbox Params]",
      "parts": [
        "values[Checkbox Params]"
      ],
      "unique": false
    },
    {
      "name": "values[Markdown Field]",
      "parts": [
        "values[Markdown Field]"
      ],
      "unique": false
    },
    {
      "name": "values[Query]",
      "parts": [
        "values[Query]"
      ],
      "unique": false
    },
    {
      "name": "values[Requested By Display Name]",
      "parts": [
        "values[Requested By Display Name]"
      ],
      "unique": false
    },
    {
      "name": "values[Requested By]",
      "parts": [
        "values[Requested By]"
      ],
      "unique": false
    },
    {
      "name": "values[Requested For Display Name]",
      "parts": [
        "values[Requested For Display Name]"
      ],
      "unique": false
    },
    {
      "name": "values[Requested For]",
      "parts": [
        "values[Requested For]"
      ],
      "unique": false
    }
  ],
  "name": "Kitchen Sink",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "section",
          "renderType": null,
          "name": "Request Details",
          "title": "Requested by/For",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "form-group__columns"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Requested For Widget",
              "text": null,
              "visible": true,
              "renderAttributes": {
                "class": "form-group mb-0"
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Requested By Widget",
              "text": null,
              "visible": true,
              "renderAttributes": {
                "class": "form-group mb-0"
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Icons",
          "title": "Icons",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Icons",
              "text": "<p>This bundle uses line-awesome icon's. You can find icons by searching for them on the <b><a href=\"https://icons8.com/line-awesome\">Line Awesome</a></b> website.</p>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Text Elements",
          "title": "Text Elements",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Text",
              "label": "Text",
              "key": "f1",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Long Text",
              "label": "Long Text",
              "key": "f2",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 4
            }
          ]
        },
        {
          "type": "content",
          "renderType": "html",
          "name": "Chart",
          "text": null,
          "visible": true,
          "renderAttributes": {
          }
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Columns A",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "form-group__columns"
          },
          "elements": [
            {
              "type": "field",
              "name": "Radio",
              "label": "Radio",
              "key": "f4",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "One",
                  "value": "One"
                },
                {
                  "label": "Two",
                  "value": "Two"
                },
                {
                  "label": "Three",
                  "value": "Three"
                }
              ]
            },
            {
              "type": "field",
              "name": "Checkbox",
              "label": "Checkbox",
              "key": "f5",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "One",
                  "value": "One"
                },
                {
                  "label": "Two",
                  "value": "Two"
                },
                {
                  "label": "Three",
                  "value": "Three"
                }
              ]
            }
          ]
        },
        {
          "type": "field",
          "name": "Dropdown",
          "label": "Dropdown",
          "key": "f3",
          "defaultValue": null,
          "defaultResourceName": null,
          "visible": true,
          "enabled": "!values('Disabled').includes('Disabled')",
          "required": false,
          "requiredMessage": null,
          "omitWhenHidden": null,
          "pattern": null,
          "constraints": [

          ],
          "events": [

          ],
          "renderAttributes": {
          },
          "dataType": "string",
          "renderType": "dropdown",
          "choicesResourceName": null,
          "choicesRunIf": null,
          "choices": [
            {
              "label": "One",
              "value": "One"
            },
            {
              "label": "Two",
              "value": "Two"
            },
            {
              "label": "Three",
              "value": "Three"
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Columns B",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "form-group__columns-3"
          },
          "elements": [
            {
              "type": "field",
              "name": "Date",
              "label": "Date",
              "key": "f7",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "field",
              "name": "Date Time",
              "label": "Date Time",
              "key": "f6",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "datetime"
            },
            {
              "type": "field",
              "name": "Time",
              "label": "Time",
              "key": "f8",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Columns C",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "form-group__columns"
          },
          "elements": [
            {
              "type": "field",
              "name": "Attachment",
              "label": "Attachment",
              "key": "f9",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "file",
              "renderType": "attachment",
              "allowMultiple": false
            },
            {
              "type": "field",
              "name": "Attachments",
              "label": "Attachments",
              "key": "f11",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": "!values('Disabled').includes('Disabled')",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "file",
              "renderType": "attachment",
              "allowMultiple": true
            }
          ]
        },
        {
          "type": "field",
          "name": "Disabled",
          "label": "",
          "key": "f10",
          "defaultValue": null,
          "defaultResourceName": null,
          "visible": true,
          "enabled": true,
          "required": false,
          "requiredMessage": null,
          "omitWhenHidden": null,
          "pattern": null,
          "constraints": [

          ],
          "events": [

          ],
          "renderAttributes": {
            "class": "switch"
          },
          "dataType": "json",
          "renderType": "checkbox",
          "choicesResourceName": null,
          "choicesRunIf": null,
          "choices": [
            {
              "label": "Disabled?",
              "value": "Disabled"
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Bootstrap Row",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "row"
          },
          "elements": [
            {
              "type": "section",
              "renderType": null,
              "name": "BS Col 3",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "col-3"
              },
              "elements": [
                {
                  "type": "content",
                  "renderType": "text",
                  "name": "Lorem Ipsum",
                  "text": "Lorem Ipsum",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "BS Col 6",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "col-6"
              },
              "elements": [
                {
                  "type": "content",
                  "renderType": "text",
                  "name": "Lorem Ipsum b",
                  "text": "Lorem Ipsum",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "BS Col 3 b",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "col-3"
              },
              "elements": [
                {
                  "type": "content",
                  "renderType": "text",
                  "name": "Lorem Ipsum c",
                  "text": "Lorem Ipsum",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "BS Col 4",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "col-4"
              },
              "elements": [
                {
                  "type": "content",
                  "renderType": "text",
                  "name": "Lorem Ipsum d",
                  "text": "Lorem Ipsum",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "BS Col 8",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "col-8"
              },
              "elements": [
                {
                  "type": "content",
                  "renderType": "text",
                  "name": "Lorem Ipsum e",
                  "text": "Lorem Ipsum",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Subform",
          "title": "Subform Example",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "py-4 my-4 border-top border-bottom border-dark"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Subform Container",
              "text": null,
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "HR",
              "text": "<hr>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Subform Slug",
              "label": "Subform Slug",
              "key": "f12",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "button",
              "label": "Load Subform",
              "name": "Load Subform",
              "visible": true,
              "enabled": "!!values('Subform Slug')",
              "renderType": "custom",
              "renderAttributes": {
              },
              "events": [
                {
                  "name": "Load Subform",
                  "type": "Click",
                  "action": "Custom",
                  "code": "K.load({\n  path: K('kapp').slug()+ '/' + (K('field[Subform Slug]').value() || K('form').slug()),\n  container: K('content[Subform Container]').element(),\n  loaded: function(form) {\n    \n  }\n});\n"
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Signature Section",
          "title": "Signature Example",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Signature Container",
              "text": null,
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Signature",
              "label": "Signature",
              "key": "f14",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "file",
              "renderType": "attachment",
              "allowMultiple": false
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "PDF Section",
          "title": "PDF Example",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "button",
              "label": "Save PDF",
              "name": "Save PDF",
              "visible": true,
              "enabled": true,
              "renderType": "custom",
              "renderAttributes": {
              },
              "events": [
                {
                  "name": "Save PDF",
                  "type": "Click",
                  "action": "Custom",
                  "code": "var pdf = bundle.helpers.PDF(K('form'), {\n  // Margin to add to the PDF in inches\n  // margin: 1,\n  // DPI at which to render html content into the PDF\n  // dpi: 150\n  // Initial content to set into the PDF\n  content: $(K('form').element()).clone().get(0)\n}, 'pdf');\n\n// Append signature if one exists\nvar sig = bundle.helpers.Signature('sig');\nif (sig && sig.isSigned()) {\n  pdf.appendContent($('<div>', { class: 'text-right' }).append(\n    $('<hr>'),\n    $('<img>', { \n      src: sig.image(),\n      alt: 'Signature',\n      // Images need to have a height set or else they and the content below them may get cut off.\n      // The default dpi is 150 and we want to signature to be 1 inch tall. \n      style: 'height: 150px;'\n    }),\n    $('<hr>')\n  ).get(0));\n}\n\n// Save PDF to file\npdf.save();"
                }
              ]
            },
            {
              "type": "field",
              "name": "PDF",
              "label": "PDF",
              "key": "f15",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "file",
              "renderType": "attachment",
              "allowMultiple": false
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "PDF Content",
              "text": "<h1>Hello World</h1>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <strong>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</strong> <span class=\"text-danger\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span> Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n\n<div class=\"form-group\">\n  <label class=\"field-label\">First Question</label>\n  <input value=\"First answer would go here\" type=\"text\" />\n</div>\n<div class=\"form-group\">\n  <label class=\"field-label\">Second Question</label>\n  <input value=\"Second answer would go here\" type=\"text\" />\n</div>\n<div class=\"form-group\">\n  <label class=\"field-label\">Third Question</label>\n  <select>\n    <option value=\"apple\">Apple</option>\n    <option value=\"cherry\" selected>Cherry</option>\n    <option value=\"peach\">Peach</option>\n  </select>\n</div>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <strong>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</strong> <span class=\"text-danger\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span> Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n\n<div class=\"form-group\">\n  <label class=\"field-label\">First Question</label>\n  <input value=\"First answer would go here\" type=\"text\" />\n</div>\n<div class=\"form-group\">\n  <label class=\"field-label\">Second Question</label>\n  <input value=\"Second answer would go here\" type=\"text\" />\n</div>\n<div class=\"form-group\">\n  <label class=\"field-label\">Third Question</label>\n  <select>\n    <option value=\"apple\">Apple</option>\n    <option value=\"cherry\" selected>Cherry</option>\n    <option value=\"peach\">Peach</option>\n  </select>\n</div>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <strong>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</strong> <span class=\"text-danger\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span> Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n\n<div class=\"form-group\">\n  <label class=\"field-label\">First Question</label>\n  <input value=\"First answer would go here\" type=\"text\" />\n</div>\n<div class=\"form-group\">\n  <label class=\"field-label\">Second Question</label>\n  <input value=\"Second answer would go here\" type=\"text\" />\n</div>\n<div class=\"form-group\">\n  <label class=\"field-label\">Third Question</label>\n  <select>\n    <option value=\"apple\">Apple</option>\n    <option value=\"cherry\" selected>Cherry</option>\n    <option value=\"peach\">Peach</option>\n  </select>\n</div>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <strong>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</strong> <span class=\"text-danger\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span> Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n\n<div class=\"form-group\">\n  <label class=\"field-label\">First Question</label>\n  <input value=\"First answer would go here\" type=\"text\" />\n</div>\n<div class=\"form-group\">\n  <label class=\"field-label\">Second Question</label>\n  <input value=\"Second answer would go here\" type=\"text\" />\n</div>\n<div class=\"form-group\">\n  <label class=\"field-label\">Third Question</label>\n  <select>\n    <option value=\"apple\">Apple</option>\n    <option value=\"cherry\" selected>Cherry</option>\n    <option value=\"peach\">Peach</option>\n  </select>\n</div>",
              "visible": false,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Markdown Section",
          "title": "Markdown Example",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Markdown Widget",
              "text": null,
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Markdown Field",
              "label": "Markdown Field",
              "key": "f22",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 4
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Hidden Fields",
          "title": "",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "bg-subtle p-3"
          },
          "elements": [
            {
              "type": "field",
              "name": "Requested For",
              "label": "Requested For",
              "key": "f16",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Requested For Display Name",
              "label": "Requested For Display Name",
              "key": "f17",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Requested By",
              "label": "Requested By",
              "key": "f18",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Requested By Display Name",
              "label": "Requested By Display Name",
              "key": "f19",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Query",
              "label": "Query",
              "key": "f20",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Checkbox Params",
              "label": "Checkbox Params",
              "key": "f21",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [

              ]
            }
          ]
        },
        {
          "type": "button",
          "label": "Submit",
          "name": "Submit Button",
          "visible": true,
          "enabled": true,
          "renderType": "submit-page",
          "renderAttributes": {
          }
        }
      ],
      "events": [
        {
          "name": "Signature Widget",
          "type": "Load",
          "action": "Custom",
          "code": "bundle.helpers.Signature(\n  K('content[Signature Container]').element(), \n  K('field[Signature]'), \n  {\n    // Disable in review mode\n    disabled: K('form').reviewMode(),\n  }, \n  'sig'\n);"
        },
        {
          "name": "PDF Widget",
          "type": "Submit",
          "action": "Custom",
          "code": "if (Object.keys(K('form').validate()).length === 0) {\n  // Stop execution of the submission while we generate a PDF\n  action.stop();\n  \n  // Initialize PDF widget\n  var pdf = bundle.helpers.PDF(K('form'), {\n    content: $(K('form').element()).clone().get(0)\n  });\n  \n  // Append signature if one exists (assumes use of the Signature\n  // helper widget with an id of 'sig').\n  var sig = bundle.helpers.Signature('sig');\n  if (sig && sig.isSigned()) {\n    pdf.appendContent($('<div>', { class: 'text-right' }).append(\n\t   $('<hr>'),\n      $('<img>', { \n        src: sig.image(),\n        alt: 'Signature',\n        // Images need to have a height set or else they and the \n// content below them may get cut off. The default dpi is \n// 150 and we want the signature to be 1 inch tall. \n        style: 'height: 150px;'\n      }),\n    ).get(0));\n  }\n\n  // Append a thank you message\n  pdf.appendContent(\n    $('<div>', { class: 'text-center' })\n      .text('Thank you for your request.').get(0)\n  );\n    \n  // Save PDF to field\n  pdf.saveToField(K('field[PDF]'), {\n    // Success callback after PDF is saved to the field\n  \t success: function() {\n      // Continue form submission\n      action.continue();\n    },\n    // Error callback if PDF fails to save\n    error: function(message) {\n    \tbundle.helpers.addToastAlert({\n      \ttitle: 'Error Saving PDF',\n        message: message + '\\nPlease contact an administrator.'\n      })\n    },\n  });\n}\n"
        },
        {
          "name": "Typeahead Widget",
          "type": "Load",
          "action": "Custom",
          "code": "// Define a custom render function for the typeahead suggestion so we can show the displayName and username\nvar suggestionContentRenderer = function(props) {\n\treturn [\n    {\n      tag: 'div',\n      props: { className: 'large' },\n      children: props.suggestion.get('Display Name')\n    },\n    {\n      tag: 'div',\n      props: { className: 'small' },\n      children: props.suggestion.get('Username')\n    }\n  ];\n};\nvar selectionRenderer = function(props) {\n\treturn [\n    {\n      tag: 'span',\n      props: { className: 'form-control-plaintext d-inline-block w-auto' },\n      children: props.selection \n      ? props.selection.get('Display Name') || props.selection.get('Username') : ''\n    },\n    {\n      tag: 'button',\n      props: { \n        className: 'btn btn-primary btn-sm rounded-pill ml-3', \n        onClick: props.edit, \n        disabled: props.disabled\n      },\n      children: 'Change'\n    }\n  ];\n};\n\n// Render Typeahead widget to implement Requested For Search\nbundle.helpers.Typeahead(K('content[Requested For Widget]').element(), {\n  // Type of typeahead\n  type: 'bridge',\n  // Label to show above this pseudo field\n  fieldLabel: 'Requested For',\n  // Search config\n  search: {\n    kappSlug: K('kapp').slug(),\n    formSlug: K('form').slug(),\n    bridgedResourceName: 'Find Person by Email',\n    fields: [{ name: 'Query' }]\n  },\n  // Property of the data record to be used as a unique value\n  valueProp: 'Username',\n  // Property of the data record to be shown in the typeahead input field\n  labelProp: 'Display Name',\n  // Initial value\n  value: {\n  \t'Username': K('field[Requested For]').value() || identity('username'),\n    'Display Name': K('field[Requested For Display Name]').value() || identity('displayName')\n  },\n  // Disable in review mode\n  disabled: K('form').reviewMode(),\n  // Function to call when the value changes\n  onChange: function(value) {\n  \tK('field[Requested For]').value(\n      value ? value['Username'] : identity('username')\n    );\n    K('field[Requested For Display Name]').value(\n      value ? value['Display Name'] : identity('displayName')\n    );\n  },\n  // Custom renderers\n  renderers: { \n    SuggestionContent: suggestionContentRenderer,\n    Selection: selectionRenderer\n  }\n}, 'rFor');\n\n// Render Typeahead widget to implement Requested By Search\nbundle.helpers.Typeahead(K('content[Requested By Widget]').element(), {\n  // Type of typeahead\n  type: 'bridge',\n  // Label to show above this pseudo field\n  fieldLabel: 'Requested By',\n  // Search config\n  search: {\n    kappSlug: K('kapp').slug(),\n    formSlug: K('form').slug(),\n    bridgedResourceName: 'Find Person by Email',\n    fields: [{ name: 'Query' }]\n  },\n  // Property of the data record to be used as a unique value\n  valueProp: 'Username',\n  // Property of the data record to be shown in the typeahead input field\n  labelProp: 'Display Name',\n  // Initial value\n  value: {\n  \t'Username': K('field[Requested By]').value() || identity('username'),\n    'Display Name': K('field[Requested By Display Name]').value() || identity('displayName')\n  },\n  // Disable in review mode\n  disabled: K('form').reviewMode(),\n  // Function to call when the value changes\n  onChange: function(value) {\n  \tK('field[Requested By]').value(\n      value ? value['Username'] : identity('username')\n    );\n    K('field[Requested By Display Name]').value(\n      value ? value['Display Name'] : identity('displayName')\n    );\n  },\n  // Custom renderers\n  renderers: { \n    SuggestionContent: suggestionContentRenderer,\n    Selection: selectionRenderer\n  }\n}, 'rBy');"
        },
        {
          "name": "Chart Widget",
          "type": "Load",
          "action": "Custom",
          "code": "var data = [\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\n];\n\nbundle.helpers.Chart(K('content[Chart]').element(), {\n  chart: {\n    component: 'AreaChart',\n    props: { data: data },\n    children: [\n      {\n        tag: 'defs',\n        children: [\n          {\n            tag: 'linearGradient',\n            props: { id: 'blueGrd', x1: 0, y1: 0, x2: 0, y2: 1 },\n            children: [\n              {\n                tag: 'stop',\n                props: { offset: '5%', stopColor: 'blue', stopOpacity: 0.8 },\n              },\n              {\n                tag: 'stop',\n                props: { offset: '95%', stopColor: 'blue', stopOpacity: 0.2 },\n              },\n            ],\n          },\n          {\n            tag: 'linearGradient',\n            props: { id: 'redGrd', x1: 0, y1: 0, x2: 0, y2: 1 },\n            children: [\n              {\n                tag: 'stop',\n                props: { offset: '5%', stopColor: 'red', stopOpacity: 0.8 },\n              },\n              {\n                tag: 'stop',\n                props: { offset: '95%', stopColor: 'red', stopOpacity: 0.2 },\n              },\n            ],\n          },\n        ],\n      },\n      { component: 'CartesianGrid', props: { strokeDasharray: '3 3' } },\n      { component: 'XAxis', props: { dataKey: 'name' } },\n      { component: 'YAxis' },\n      { component: 'Tooltip' },\n      { component: 'Legend' },\n      {\n        component: 'Area',\n        props: { type: 'monotone', dataKey: 'pv', stroke: 'blue', fill: 'url(#blueGrd)' },\n      },\n      {\n        component: 'Area',\n        props: { type: 'monotone', dataKey: 'uv', stroke: 'red', fill: 'url(#redGrd)' },\n      },\n    ],\n  },\n});\n",
          "runIf": ""
        },
        {
          "name": "Markdown Widget",
          "type": "Load",
          "action": "Custom",
          "code": "// Load Markdown Widget that is defined in the react bundle, passing in the markdown form element, and the field the markdown should be stored in.\n\nbundle.helpers.markdownEditor({\n  \"container\": K('content[Markdown Widget]').element(),\n  \"field\": K('field[Markdown Field]')\n});"
        }
      ],
      "name": "Page",
      "renderType": "submittable",
      "type": "page"
    }
  ],
  "securityPolicies": [

  ],
  "slug": "kitchen-sink",
  "status": "Active",
  "submissionLabelExpression": "",
  "type": "Template"
}